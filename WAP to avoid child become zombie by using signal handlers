#include <stdio.h>

   #include <unistd.h>

   #include <sys/signal.h>

   #include <signal.h>

   #include <stdlib.h>

   #include <string.h>

   

   //METHOD 1 : catch SIGCHLD 

   void handler_sigchld(int status)

  {

      pid_t pid;

  

      pid = wait(&status);

      printf("Child %d terminated with exit code %d \n", pid, WEXITSTATUS(status));

  

      exit(1);

  } 

  int main()

  {

      pid_t pid;

      int status;

  

      pid = fork();

  

      //to catch SIGCHLD

      signal(SIGCHLD, handler_sigchld);

  

      if(pid < 0)

      {

          printf("Error: fork() failed");

          return 1;

      }

      else if (pid == 0)

      {

          //child process

          exit(0);

      }

      else

      {

          //parent process

          sleep(2);

          exit(0);

      }

  }

